
server {
  listen 80;
  listen [::]:80;

  server_name my.site www.my.site;

  return 301 https://$host$request_uri;
}

server {
  listen 443 http2 ssl;
  listen [::]:443 http2 ssl;

  root /var/www/my.site;

  index index.html index.htm index.php;

  server_name my.site www.my.site;

  client_max_body_size 500M;

  ssl_certificate /etc/nginx/ssl/my.site.pem;
  ssl_certificate_key /etc/nginx/ssl/my.site.key;

  error_log /var/log/nginx/my.site_error.log;
  access_log /var/log/nginx/my.site_access.log;

  #Deny access to wp-content folders for suspicious files
  location ~* ^/(wp-content)/(.*?)\.(zip|gz|tar|bzip2|7z)$ {
    deny all;
  }

  location ~ ^/wp-content/uploads/sucuri {
    deny all;
  }

  location ~ ^/wp-content/updraft {
    deny all;
  }

  #Disable execution of scripts other than PHP from your document root
  location ~* .(pl|cgi|py|sh|lua|asp)$ {
    return 404;
  }

  #Disable access to your configuration files and other files that you don’t want to users are able to see
  location ~* /(wp-config.php|readme.html|license.txt|nginx.conf) {
    deny all;
  }

  # Disable wp-config.txt
  location = /wp-config.txt {
    deny all;
    access_log off;
    log_not_found off;
  }

  # nginx block xmlrpc.php requests
  location = /xmlrpc.php {
    deny all;
    access_log off;
    log_not_found off;
    return 404;
  }

  # nginx block wpscann on plugins folder
  location ~* ^/wp-content/(?:plugins|themes)/.+\.(txt|log|md)$ {
    deny all;
    error_page 403 =404 / ;
  }

  # block access to install.php and upgrade.php
  location ^~ /wp-admin/(install.php|upgrade.php) {
    deny all;
    error_page 403 =404 / ;
  }

  #This module will allow us to pattern match certain key files and inject random text in the files that
  # is non-destructive / non-invasive and will most importantly alter the md5sum calculated on such files. All transparent to WPScan.
  location ~* ^/(license.txt|wp-includes/(.*)/.+\.(js|css)|wp-admin/(.*)/.+\.(js|css))$ {
    sub_filter_types text/css text/javascript text/plain;
    sub_filter_once on;
    sub_filter ';' '; /* $msec */ ';
  }

  #Direct PHP File Access
  #If somehow, a hacker successfully sneaks in a PHP file onto your site,
  #they’ll be able to run this file by loading file which effectively becomes a backdoor to infiltrate your site.
  #We should disable direct access to any PHP files by adding the following rules:
  location ~* /(?:uploads|files|wp-content|wp-includes|akismet)/.*.php$ {
    deny all;
    access_log off;
    log_not_found off;
  }

  #Dotfiles
  #Similar to PHP file, a dotfile like .htaccess, .user.ini, and .git may contain sensitive information.
  #To be on the safer side, it’s better to disable direct access to these files.
  location ~ /\.(svn|git)/* {
    deny all;
    access_log off;
    log_not_found off;
  }

  location ~ /\.ht {
    deny all;
    access_log off;
    log_not_found off;
  }

  location ~ /\.user.ini {
    deny all;
    access_log off;
    log_not_found off;
  }

  # Deny backup extensions & log files
  location ~* ^.+\.(bak|log|old|orig|original|php#|php~|php_bak|save|swo|swp|sql)$ {
    deny all;
    access_log off;
    log_not_found off;
  }

  # common nginx configuration to block sql injection and other attacks
  location ~* "(eval\()" {
    deny all;
  }

  location ~* "(127\.0\.0\.1)" {
    deny all;
  }

  location ~* "([a-z0-9]{2000})" {
    deny all;
  }

  location ~* "(javascript\:)(.*)(\;)" {
    deny all;
  }

  location ~* "(base64_encode)(.*)(\()" {
    deny all;
  }

  location ~* "(GLOBALS|REQUEST)(=|\[|%)" {
    deny all;
  }

  location ~* "(<|%3C).*script.*(>|%3)" {
    deny all;
  }

  location ~ "(\|\.\.\.|\.\./|~|\`|<|>|\|)" {
    deny all;
  }

  location ~* "(boot\.ini|etc/passwd|self/environ)" {
    deny all;
  }

  location ~* "(thumbs?(_editor|open)?|tim(thumb)?)\.php" {
    deny all;
  }

  location ~* "(\'|\")(.*)(drop|insert|md5|select|union)" {
    deny all;
  }

  location ~* "(https?|ftp|php):/" {
    deny all;
  }

  location ~* "(=\\'|=\%27|/\\'/?)\." {
    deny all;
  }

  location ~ "(\{0\}|\(/\(|\.\.\.|\+\+\+|\"\")" {
    deny all;
  }

  location ~ "(~|\`|<|>|:|;|%|\|\s|\{|\}|\[|\]|\|)" {
    deny all;
  }

  location ~* "/(=|$&|_mm|(wp-)?config\.|cgi-|etc/passwd|muieblack)" {
    deny all;
  }

  location ~* "(&pws=0|_vti_|\(null\)|\{$itemURL\}|echo(.*)kae|etc/passwd|eval\(|self/environ)" {
    deny all;
  }

  location ~* "/(^$|mobiquo|phpinfo|shell|sqlpatch|thumb|thumb_editor|thumbopen|timthumb|webshell|config|settings|configuration)\.php" {
    deny all;
  }

  location / {
    try_files $uri $uri/ /index.php?$args;
  }

  location ~ \.php$ {
    include snippets/fastcgi-php.conf;
    fastcgi_pass unix:/var/run/php/php8.1-fpm-my_site.sock;
  }
}